<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false"  doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="headless" default="false"/>
  <!--<arg name="world" default="$(find tori_gazebo)/worlds/tori_ign.world"/>-->
  <arg name="world" default="$(find tori_gazebo)/worlds/world_test.sdf"/>
  <arg name="ign_args" default=""/>

  <include file="$(find ros_ign_gazebo)/launch/ign_gazebo.launch">
    <arg name="ign_args" value="-r -v 3 $(arg world)"/>
  </include>







  <!-- startup simulated world -->
  <!--
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find tori_gazebo)/worlds/tori.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="true"/>
    <arg name="physics" value="ode"/>
  </include>-->

  <!-- send robot urdf to param server -->
  <include file="$(find tori_description)/launch/tori_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>
<!--
  <node
    pkg="ros_ign_gazebo"
    type="create"
    name="$(anon ros_ign_create_sphere)"
    output="screen"
    args="-world $(arg world) -param robot_description -name spawned -allow_renaming true -z 10">
  </node>-->

  <!-- push robot_description to factory and spawn robot in gazebo
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />

  <include file="$(find tori_gazebo)/launch/controller_utils.launch"/>-->

  <!-- start this controller
  <rosparam file="$(find tori_gazebo)/controller/arm_controller_tori.yaml" command="load"/>-->
<!--
  <node name="leg_l_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn leg_l_controller" respawn="false" output="screen"/>
  <node name="leg_r_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn leg_r_controller" respawn="false" output="screen"/>
  <node name="spine_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn spine_controller" respawn="false" output="screen"/>
  <node name="toes_l_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn toes_l_controller" respawn="false" output="screen"/>
  <node name="toes_r_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn toes_r_controller" respawn="false" output="screen"/>
-->
  <!-- load other controllers -->
  <!--<node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />
-->
  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>-->
  <!--<node name="rviz" pkg="rviz" type="rviz" />
-->
</launch>
